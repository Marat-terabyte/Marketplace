services:
  identityservice:
    image: ${DOCKER_REGISTRY-}identityservice
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    environment:
        - ASPNETCORE_URLS=http://*:7001
    ports:
        - "7001:7001"
    volumes:
        - identity_volume:/identity.sqlite
    networks:
        - common_network
  
  paymentservice:
    image: ${DOCKER_REGISTRY-}paymentservice
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    depends_on:
        - rabbitmq
    environment:
        - ASPNETCORE_URLS=http://*:7002
        - ConnectionStrings__RabbitMQ=rabbitmq
    ports:
        - "7002:7002"
    volumes:
        - payment_volume:/PaymentService.sqlite
    networks:
        - common_network

  notifictationservice:
    image: ${DOCKER_REGISTRY-}notifictationservice
    build:
      context: .
      dockerfile: NotifictationService/Dockerfile
    ports:
        - "7003:7003"
    depends_on:
        - rabbitmq
    environment:
        - ASPNETCORE_URLS=http://*:7003
        - ConnectionStrings__RabbitMQ=rabbitmq
    networks:
        - common_network

  productservice:
    image: ${DOCKER_REGISTRY-}productservice
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    depends_on:
        - rabbitmq
        - redis
        - mongo
    ports:
        - "7004:7004"
    environment:
        - ASPNETCORE_URLS=http://*:7004
        - ConnectionStrings__MongoDB=mongodb://mongodb:27017
        - ConnectionStrings__Redis=redis
        - ConnectionStrings__RabbitMQ=rabbitmq
    networks:
        - common_network
  
  searchservice:
    image: ${DOCKER_REGISTRY-}searchservice
    build:
      context: .
      dockerfile: SearchService/Dockerfile
    depends_on:
        - elastic
        - rabbitmq
    ports:
        - "7005:7005"
        - "8005:8005"
    environment:
        - ASPNETCORE_URLS=http://*:7005
        - ConnectionStrings__ElasticSearch=http://elastic:9200
        - ConnectionStrings__RabbitMQ=rabbitmq
        - ASPNETCORE_HTTP_PORTS=7005
        - ASPNETCORE_HTTPS_PORTS=8005
    networks:
        - common_network

  cartservice:
    image: ${DOCKER_REGISTRY-}cartservice
    build:
      context: .
      dockerfile: CartService/Dockerfile
    ports:
        - "7006:7006"
        - "8006:8006"
    depends_on:
        - rabbitmq
        - mongo
    environment:
        - ASPNETCORE_URLS=http://*:7006
        - ConnectionStrings__MongoDB=mongodb://mongodb:27017
        - ConnectionStrings__RabbitMQ=rabbitmq
        - Services__ProductService=http://productservice:7004
        - ASPNETCORE_HTTP_PORTS=7006
        - ASPNETCORE_HTTPS_PORTS=8006
    networks:
        - common_network

  orderservice:
    image: ${DOCKER_REGISTRY-}orderservice
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
        - "7007:7007"
        - "8007:8007"
    depends_on:
        - rabbitmq
        - mongo
    environment:
        - ASPNETCORE_URLS=http://*:7007
        - ConnectionStrings__MongoDB=mongodb://mongodb:27017
        - ConnectionStrings__RabbitMQ=rabbitmq
        - ASPNETCORE_HTTP_PORTS=7007
        - ASPNETCORE_HTTPS_PORTS=8007
    networks:
        - common_network

  elastic:
    image: elasticsearch:7.17.22
    container_name: elasticsearch
    ports:
        - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
    networks:
        - common_network

  redis:
    image: redis:latest
    container_name: dbredis
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
    networks:
        - common_network
  
  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
        - "27017:27107"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
        - common_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - common_network

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: api-gateway
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    ports:
        - "80:80"
        - "443:443"
    environment:
        - ASPNETCORE_URLS=http://*:80
        - CorsConfig__Origins__0=http://localhost5173
    networks:
        - common_network

volumes:
  identity_volume:
  payment_volume:
  rabbitmq_data:
  mongo-data:
  mongo-config:
  esdata:

networks:
    common_network:
        driver: bridge
